diff --git a/core/tests/Drupal/KernelTests/Core/Entity/Element/EntityAutocompleteElementFormTest.php b/core/tests/Drupal/KernelTests/Core/Entity/Element/EntityAutocompleteElementFormTest.php
index 5d7ea0e..fd579ac 100644
--- a/core/tests/Drupal/KernelTests/Core/Entity/Element/EntityAutocompleteElementFormTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Entity/Element/EntityAutocompleteElementFormTest.php
@@ -384,4 +384,27 @@ protected function getAutocompleteInput(EntityInterface $entity) {
     return EntityAutocomplete::getEntityLabels([$entity]);
   }
 
+  /**
+   * Tests Single entries in the EntityAutocomplete Form API element.
+   * Test autocomplete values by entering comma seperated entity values to
+   * single entries value and check the result.
+   */
+  public function testSingleEntryEntityAutocompleteElement() {
+    // Test 'single' with a multiple comma seperated entity values.
+    $form_state = (new FormState())
+      ->setValues([
+        'single' => $this->getAutocompleteInput($this->referencedEntities[1]) . ', '. $this->getAutocompleteInput($this->referencedEntities[0]),
+      ]);
+
+    $form_builder = $this->container->get('form_builder');
+    $form_builder->submitForm($this, $form_state);
+
+    // Valid form state.
+    $this->assertEqual(count($form_state->getErrors()), 0);
+
+    // Check the value of autocomplete value has the valid value.
+    $this->assertEqual($form_state->getValue('single'), $this->referencedEntities[1]->id());
+
+  }
+
 }
